// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StreamHub.Persistence.Contexts;

#nullable disable

namespace StreamHub.Persistence.Migrations
{
    [DbContext(typeof(StreamHubDbContext))]
    partial class StreamHubDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("StreamHub.Persistence.Entities.EpisodeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EpisodeNumber")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<int>("SeasonId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SeasonId");

                    b.ToTable("Episodes");
                });

            modelBuilder.Entity("StreamHub.Persistence.Entities.MediaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<int>("MediaLibraryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MediaType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("Continuing");

                    b.Property<string>("Studio")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("TheTvdbId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MediaLibraryId");

                    b.ToTable("Media");

                    b.HasDiscriminator<int>("MediaType");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("StreamHub.Persistence.Entities.MediaLibraryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MediaLibraries");
                });

            modelBuilder.Entity("StreamHub.Persistence.Entities.SeasonEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<int>("SeasonNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SeriesId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SeriesId");

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("StreamHub.Persistence.Entities.MovieEntity", b =>
                {
                    b.HasBaseType("StreamHub.Persistence.Entities.MediaEntity");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("StreamHub.Persistence.Entities.SeriesEntity", b =>
                {
                    b.HasBaseType("StreamHub.Persistence.Entities.MediaEntity");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("StreamHub.Persistence.Entities.EpisodeEntity", b =>
                {
                    b.HasOne("StreamHub.Persistence.Entities.SeasonEntity", "SeasonEntity")
                        .WithMany("Episodes")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SeasonEntity");
                });

            modelBuilder.Entity("StreamHub.Persistence.Entities.MediaEntity", b =>
                {
                    b.HasOne("StreamHub.Persistence.Entities.MediaLibraryEntity", "MediaLibraryEntity")
                        .WithMany("MediaItems")
                        .HasForeignKey("MediaLibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MediaLibraryEntity");
                });

            modelBuilder.Entity("StreamHub.Persistence.Entities.SeasonEntity", b =>
                {
                    b.HasOne("StreamHub.Persistence.Entities.SeriesEntity", "SeriesEntity")
                        .WithMany("Seasons")
                        .HasForeignKey("SeriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SeriesEntity");
                });

            modelBuilder.Entity("StreamHub.Persistence.Entities.MediaLibraryEntity", b =>
                {
                    b.Navigation("MediaItems");
                });

            modelBuilder.Entity("StreamHub.Persistence.Entities.SeasonEntity", b =>
                {
                    b.Navigation("Episodes");
                });

            modelBuilder.Entity("StreamHub.Persistence.Entities.SeriesEntity", b =>
                {
                    b.Navigation("Seasons");
                });
#pragma warning restore 612, 618
        }
    }
}
