name: .NET Build

on:
    push:
        branches:
            - master
    pull_request:
        types: [opened, synchronize, reopened]

jobs:
    build:
        name: Build .NET Solution
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup .NET
              uses: actions/setup-dotnet@v3
              with:
                  dotnet-version: "9.0.x"

            - name: Restore dependencies
              run: dotnet restore StreamHub.sln

            - name: Build Solution
              run: dotnet build StreamHub.sln --configuration Release --no-restore

            - name: Run Tests
              run: dotnet test StreamHub.sln --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./TestResults

            - name: Show TestResults folder
              run: ls -R ./TestResults

            - name: Install ReportGenerator
              run: dotnet tool install --global dotnet-reportgenerator-globaltool

            - name: Convert coverage to Cobertura
              run: |
                  reportgenerator \
                    -reports:"TestResults/**/coverage.cobertura.xml" \
                    -targetdir:"coveragereport" \
                    -reporttypes:Cobertura
              env:
                  PATH: ${{ env.PATH }}:/home/runner/.dotnet/tools

            - name: Run SonarCloud Scan
              uses: SonarSource/sonarcloud-github-action@master
              with:
                  args: >
                      -Dsonar.projectKey=Janobob_StreamHub
                      -Dsonar.organization=janobob
                      -Dsonar.host.url=https://sonarcloud.io
                      -Dsonar.cs.opencover.reportsPaths=coveragereport/Cobertura.xml
              env:
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
